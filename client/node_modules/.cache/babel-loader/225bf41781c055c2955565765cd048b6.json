{"remainingRequest":"/home/sebastian/Escritorio/RedSocial/client/node_modules/babel-loader/lib/index.js!/home/sebastian/Escritorio/RedSocial/client/src/store.js","dependencies":[{"path":"/home/sebastian/Escritorio/RedSocial/client/src/store.js","mtime":1648485675506},{"path":"/home/sebastian/Escritorio/RedSocial/client/node_modules/cache-loader/dist/cjs.js","mtime":1648485674774},{"path":"/home/sebastian/Escritorio/RedSocial/client/node_modules/babel-loader/lib/index.js","mtime":1648485674754}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/sebastian/Escritorio/RedSocial/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/sebastian/Escritorio/RedSocial/client/node_modules/@babel/runtime/helpers/builtin/es6/asyncToGenerator\";\nimport _toConsumableArray from \"/home/sebastian/Escritorio/RedSocial/client/node_modules/@babel/runtime/helpers/builtin/es6/toConsumableArray\";\nimport Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport router from \"./router\";\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    posts: [],\n    searchResults: [],\n    userPosts: [],\n    user: null,\n    loading: false,\n    error: null,\n    authError: null\n  },\n  mutations: {\n    setPosts: function setPosts(state, payload) {\n      // actualiza el valor de posts\n      state.posts = payload;\n    },\n    setSearchResults: function setSearchResults(state, payload) {\n      if (payload !== null) {\n        state.searchResults = payload;\n      }\n    },\n    clearSearchResults: function clearSearchResults(state) {\n      state.searchResults = [];\n    },\n    setUser: function setUser(state, payload) {\n      console.log(\"state\", \"payload\", state, payload);\n      state.user = payload;\n    },\n    setUserPosts: function setUserPosts(state, payload) {\n      state.userPosts = payload;\n    },\n    setLoading: function setLoading(state, payload) {\n      state.loading = payload;\n    },\n    clearUser: function clearUser(state) {\n      state.user = null;\n    },\n    setError: function setError(state, payload) {\n      state.error = payload;\n    },\n    clearError: function clearError(state) {\n      state.error = null;\n    },\n    setAuthError: function setAuthError(state, payload) {\n      state.authError = payload;\n    }\n  },\n  actions: {\n    getUserPosts: function getUserPosts(_ref, payload) {\n      var commit = _ref.commit;\n      commit(\"setLoading\", true);\n      var config = {\n        headers: {\n          'X-Auth-Token': localStorage.getItem('token')\n        }\n      };\n      console.log(\"user\", localStorage.getItem('userId'));\n      Vue.axios.get(\"http://localhost:3000/api/images/user/\" + localStorage.getItem('UserId'), config).then(function (_ref2) {\n        var data = _ref2.data;\n        console.log(\"user post\", data);\n        commit(\"setUserPosts\", data);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    getCurrentUser: function getCurrentUser(_ref3) {\n      var commit = _ref3.commit;\n      commit(\"setLoading\", true);\n      var config = {\n        headers: {\n          'X-Auth-Token': localStorage.getItem('token')\n        }\n      };\n      Vue.axios.get(\"http://localhost:3000/api/user/\" + localStorage.getItem('UserId'), config).then(function (response) {\n        console.log(\"repues get post\", response.data);\n        commit(\"setLoading\", false); // Agregar la data(estado) a 'user'\n\n        commit(\"setUser\", response.data);\n      }).catch(function (error) {\n        commit(\"setLoading\", false);\n        commit(\"setError\", error);\n        console.log(error);\n      });\n    },\n    getPosts: function getPosts(_ref4) {\n      var commit = _ref4.commit;\n      commit(\"setLoading\", true);\n      var config = {\n        headers: {\n          'X-Auth-Token': localStorage.getItem('token')\n        }\n      };\n      Vue.axios.get(\"http://localhost:3000/api/contenido\", config).then(function (response) {\n        console.log(\"repues get post\", response.data); // actualizar el estado. Obtiene la data en 'actions' y la pasa a 'state' a traves de mutaciones\n        // Commit pasa la data a la mutacion\n\n        commit(\"setPosts\", response.data);\n        commit(\"setLoading\", false);\n      }).catch(function (error) {\n        commit(\"setLoading\", false);\n        commit(\"setError\", error);\n        console.log(error);\n      });\n    },\n    addPost: function addPost(_ref5, payload) {\n      var commit = _ref5.commit;\n      commit(\"setLoading\", true);\n      var config = {\n        headers: {\n          'X-Auth-Token': localStorage.getItem('token')\n        }\n      };\n      Vue.axios.post(\"http://localhost:3000/api/images/create\", payload).then(function (_ref6) {\n        var data = _ref6.data;\n        commit(\"setLoading\", false);\n        console.log(data.addPost);\n      }).catch(function (error) {\n        commit(\"setLoading\", false);\n        commit(\"setError\", error);\n        console.log(error);\n      });\n    },\n    updateUserPost: function updateUserPost(_ref7, payload) {\n      var state = _ref7.state,\n          commit = _ref7.commit;\n      apolloClient.mutate({\n        mutation: UPDATE_USER_POST,\n        variables: payload\n      }).then(function (_ref8) {\n        var data = _ref8.data;\n        var index = state.userPosts.findIndex(function (post) {\n          return post._id === data.updateUserPost._id;\n        });\n\n        var userPost = _toConsumableArray(state.userPosts.slice(0, index)).concat([data.updateUserPost], _toConsumableArray(state.userPosts.slice(index + 1)));\n\n        commit(\"setUserPosts\", userPost);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    searchPosts: function searchPosts(_ref9, payload) {\n      var commit = _ref9.commit;\n      apolloClient.query({\n        query: SEARCH_POSTS,\n        variables: payload\n      }).then(function (_ref10) {\n        var data = _ref10.data;\n        commit(\"setSearchResults\", data.searchPosts);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    deleteUserPost: function deleteUserPost(_ref11, payload) {\n      var state = _ref11.state,\n          commit = _ref11.commit;\n      var config = {\n        headers: {\n          'X-Auth-Token': localStorage.getItem('token')\n        }\n      };\n      Vue.axios.delete(\"http://localhost:3000/api/images/delete/\" + payload.postId, config).then(function (_ref12) {\n        var data = _ref12.data;\n        var index = state.userPosts.findIndex(function (post) {\n          return post._id === data.deleteUserPost._id;\n        });\n\n        var userPosts = _toConsumableArray(state.userPosts.slice(0, index)).concat(_toConsumableArray(state.userPosts.slice(index + 1)));\n\n        commit(\"setUserPosts\", userPosts);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    signinUser: function signinUser(_ref13, payload) {\n      var commit = _ref13.commit;\n      commit(\"clearError\");\n      commit(\"setLoading\", true);\n      Vue.axios.post(\"http://localhost:3000/api/auth\", payload).then(function (response) {\n        console.log(\"el token\", response.data.token);\n        localStorage.setItem(\"token\", response.data.token);\n        localStorage.setItem('Nombre', response.data['user'].name);\n        localStorage.setItem('Apellido', response.data['user'].surname);\n        localStorage.setItem('UserId', response.data['user']._id); // Asegurar que el metodo created en main.js se ejecute\n        // router.go -> recarga la pagina\n\n        router.go();\n      }).catch(function (error) {\n        commit(\"setLoading\", false);\n        commit(\"setError\", error);\n        console.log(\"error\", error);\n      });\n    },\n    signupUser: function signupUser(_ref14, payload) {\n      var commit = _ref14.commit;\n      commit(\"clearError\");\n      commit(\"setLoading\", true);\n      Vue.axios.post(\"http://localhost:3000/api/register\", payload).then(function (response) {\n        console.log(\"respuesta\", response);\n        localStorage.setItem(\"token\", response.data.token);\n        localStorage.setItem('Nombre', response.data['user'].name);\n        localStorage.setItem('Apellido', response.data['user'].surname);\n        localStorage.setItem('UserId', response.data['user']._id); // Asegurar que el metodo created en main.js se ejecute\n        // router.go -> recarga la pagina\n      }).catch(function (error) {\n        console.log(\"error\", error);\n        commit(\"setLoading\", false);\n        commit(\"setError\", error);\n        console.log(error);\n      });\n    },\n    signoutUser: function () {\n      var _signoutUser = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref15) {\n        var commit;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                commit = _ref15.commit;\n                // limpiar estado de 'user'\n                commit(\"clearUser\"); // Eliminar toke de localStorage\n\n                localStorage.setItem(\"token\", \"\"); // Terminar la sesi√≥n\n\n                _context.next = 5;\n                return apolloClient.resetStore();\n\n              case 5:\n                // Redireccionar al home page\n                router.push(\"/\");\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function signoutUser(_x) {\n        return _signoutUser.apply(this, arguments);\n      };\n    }()\n  },\n  getters: {\n    posts: function posts(state) {\n      return state.posts;\n    },\n    searchResults: function searchResults(state) {\n      return state.searchResults;\n    },\n    userPosts: function userPosts(state) {\n      return state.userPosts;\n    },\n    loading: function loading(state) {\n      return state.loading;\n    },\n    user: function user(state) {\n      return state.user;\n    },\n    userFavorites: function userFavorites(state) {\n      return state.user && state.user.favorites;\n    },\n    error: function error(state) {\n      return state.error;\n    },\n    authError: function authError(state) {\n      return state.authError;\n    }\n  }\n});",{"version":3,"sources":["src/store.js"],"names":["Vue","Vuex","router","use","Store","state","posts","searchResults","userPosts","user","loading","error","authError","mutations","setPosts","payload","setSearchResults","clearSearchResults","setUser","console","log","setUserPosts","setLoading","clearUser","setError","clearError","setAuthError","actions","getUserPosts","commit","config","headers","localStorage","getItem","axios","get","then","data","catch","getCurrentUser","response","getPosts","addPost","post","updateUserPost","apolloClient","mutate","mutation","UPDATE_USER_POST","variables","index","findIndex","_id","userPost","slice","searchPosts","query","SEARCH_POSTS","deleteUserPost","delete","postId","signinUser","token","setItem","name","surname","go","signupUser","signoutUser","resetStore","push","getters","userFavorites","favorites"],"mappings":"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","sourceRoot":"/home/sebastian/Escritorio/RedSocial/client","sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport router from \"./router\";\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {\n    posts: [],\n    searchResults: [],\n    userPosts: [],\n    user: null,\n    loading: false,\n    error: null,\n    authError: null\n  },\n  mutations: {\n    setPosts: (state, payload) => {\n      // actualiza el valor de posts\n      state.posts = payload;\n    },\n    setSearchResults: (state, payload) => {\n      if (payload !== null) {\n        state.searchResults = payload;\n      }\n    },\n    clearSearchResults: state => {\n      state.searchResults = [];\n    },\n    setUser: (state, payload) => {\n      console.log(\"state\", \"payload\", state, payload)\n      state.user = payload;\n    },\n    setUserPosts: (state, payload) => {\n      state.userPosts = payload;\n    },\n    setLoading: (state, payload) => {\n      state.loading = payload;\n    },\n    clearUser: state => {\n      state.user = null;\n    },\n    setError: (state, payload) => {\n      state.error = payload;\n    },\n    clearError: state => {\n      state.error = null;\n    },\n    setAuthError: (state, payload) => {\n      state.authError = payload;\n    }\n  },\n  actions: {\n    getUserPosts: ({ commit }, payload) => {\n      commit(\"setLoading\", true);\n      let config = {\n        headers: {\n          'X-Auth-Token': localStorage.getItem('token')\n        }\n      }\n      console.log(\"user\", localStorage.getItem('userId'))\n      Vue.axios.get(\"http://localhost:3000/api/images/user/\" + localStorage.getItem('UserId'), config)\n        .then(({ data }) => {\n          console.log(\"user post\", data)\n          commit(\"setUserPosts\", data);\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    },\n\n    getCurrentUser: ({ commit }) => {\n      commit(\"setLoading\", true);\n      let config = {\n        headers: {\n          'X-Auth-Token': localStorage.getItem('token')\n        }\n      }\n      Vue.axios.get(\"http://localhost:3000/api/user/\" + localStorage.getItem('UserId'), config)\n        .then((response) => {\n          console.log(\"repues get post\", response.data)\n          commit(\"setLoading\", false);\n          // Agregar la data(estado) a 'user'\n          commit(\"setUser\", response.data);\n        }).catch(error => {\n          commit(\"setLoading\", false);\n          commit(\"setError\", error);\n          console.log(error);\n        });\n    },\n    getPosts: ({ commit }) => {\n      commit(\"setLoading\", true);\n      let config = {\n        headers: {\n          'X-Auth-Token': localStorage.getItem('token')\n\n        }\n      }\n      Vue.axios.get(\"http://localhost:3000/api/contenido\", config).\n        then((response) => {\n          console.log(\"repues get post\", response.data)\n          // actualizar el estado. Obtiene la data en 'actions' y la pasa a 'state' a traves de mutaciones\n          // Commit pasa la data a la mutacion\n          commit(\"setPosts\", response.data);\n          commit(\"setLoading\", false);\n        }).catch(error => {\n          commit(\"setLoading\", false);\n          commit(\"setError\", error);\n          console.log(error);\n        });\n    },\n    addPost: ({ commit }, payload) => {\n      commit(\"setLoading\", true);\n      let config = {\n        headers: {\n          'X-Auth-Token': localStorage.getItem('token')\n        }\n      }\n      Vue.axios.post(\"http://localhost:3000/api/images/create\", payload)\n        .then(({ data }) => {\n          commit(\"setLoading\", false);\n          console.log(data.addPost);\n        })\n        .catch(error => {\n          commit(\"setLoading\", false);\n          commit(\"setError\", error);\n          console.log(error);\n        });\n    },\n    updateUserPost: ({ state, commit }, payload) => {\n      apolloClient\n        .mutate({\n          mutation: UPDATE_USER_POST,\n          variables: payload\n        })\n        .then(({ data }) => {\n          const index = state.userPosts.findIndex(\n            post => post._id === data.updateUserPost._id\n          );\n          const userPost = [\n            ...state.userPosts.slice(0, index),\n            data.updateUserPost,\n            ...state.userPosts.slice(index + 1)\n          ];\n          commit(\"setUserPosts\", userPost);\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    },\n    searchPosts: ({ commit }, payload) => {\n      apolloClient\n        .query({\n          query: SEARCH_POSTS,\n          variables: payload\n        })\n        .then(({ data }) => {\n          commit(\"setSearchResults\", data.searchPosts);\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    },\n    deleteUserPost: ({ state, commit }, payload) => {\n      let config = {\n        headers: {\n          'X-Auth-Token': localStorage.getItem('token')\n        }\n      }\n      Vue.axios.delete(\"http://localhost:3000/api/images/delete/\" + payload.postId, config)\n        .then(({ data }) => {\n          const index = state.userPosts.findIndex(\n            post => post._id === data.deleteUserPost._id\n          );\n          const userPosts = [\n            ...state.userPosts.slice(0, index),\n            ...state.userPosts.slice(index + 1)\n          ];\n          commit(\"setUserPosts\", userPosts);\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    },\n    signinUser: ({ commit }, payload) => {\n      commit(\"clearError\");\n      commit(\"setLoading\", true);\n      Vue.axios.post(\"http://localhost:3000/api/auth\", payload)\n        .then((response) => {\n          console.log(\"el token\", response.data.token)\n          localStorage.setItem(\"token\", response.data.token);\n          localStorage.setItem('Nombre', response.data['user'].name);\n          localStorage.setItem('Apellido', response.data['user'].surname);\n          localStorage.setItem('UserId', response.data['user']._id);\n          // Asegurar que el metodo created en main.js se ejecute\n          // router.go -> recarga la pagina\n          router.go();\n        })\n        .catch(error => {\n          commit(\"setLoading\", false);\n          commit(\"setError\", error);\n          console.log(\"error\", error);\n        });\n    },\n    signupUser: ({ commit }, payload) => {\n      commit(\"clearError\");\n      commit(\"setLoading\", true);\n      Vue.axios.post(\"http://localhost:3000/api/register\", payload).\n        then((response) => {\n          console.log(\"respuesta\", response)\n          localStorage.setItem(\"token\", response.data.token);\n          localStorage.setItem('Nombre', response.data['user'].name);\n          localStorage.setItem('Apellido', response.data['user'].surname);\n          localStorage.setItem('UserId', response.data['user']._id);\n          // Asegurar que el metodo created en main.js se ejecute\n          // router.go -> recarga la pagina\n        }).catch(error => {\n          console.log(\"error\", error)\n          commit(\"setLoading\", false);\n          commit(\"setError\", error);\n          console.log(error);\n        });\n    },\n    signoutUser: async ({ commit }) => {\n      // limpiar estado de 'user'\n      commit(\"clearUser\");\n      // Eliminar toke de localStorage\n      localStorage.setItem(\"token\", \"\");\n      // Terminar la sesi√≥n\n      await apolloClient.resetStore();\n      // Redireccionar al home page\n      router.push(\"/\");\n    }\n  },\n  getters: {\n    posts: state => state.posts,\n    searchResults: state => state.searchResults,\n    userPosts: state => state.userPosts,\n    loading: state => state.loading,\n    user: state => state.user,\n    userFavorites: state => state.user && state.user.favorites,\n    error: state => state.error,\n    authError: state => state.authError\n  }\n});\n"]}]}