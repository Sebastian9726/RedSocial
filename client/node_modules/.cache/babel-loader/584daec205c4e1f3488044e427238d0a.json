{"remainingRequest":"/home/sebastian/Escritorio/proyecto-9-vue-social-network-master/client/node_modules/babel-loader/lib/index.js!/home/sebastian/Escritorio/proyecto-9-vue-social-network-master/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/sebastian/Escritorio/proyecto-9-vue-social-network-master/client/src/components/Auth/Signup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/sebastian/Escritorio/proyecto-9-vue-social-network-master/client/src/components/Auth/Signup.vue","mtime":1543505441000},{"path":"/home/sebastian/Escritorio/proyecto-9-vue-social-network-master/client/node_modules/cache-loader/dist/cjs.js","mtime":1648227723569},{"path":"/home/sebastian/Escritorio/proyecto-9-vue-social-network-master/client/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/home/sebastian/Escritorio/proyecto-9-vue-social-network-master/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/home/sebastian/Escritorio/proyecto-9-vue-social-network-master/client/node_modules/@babel/runtime/helpers/builtin/es6/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"Signup\",\n  data: function data() {\n    var _this = this;\n\n    return {\n      isValidForm: true,\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      passwordConfirmation: \"\",\n      // Validación de campos de formulario\n      usernameRules: [// comprobar que se ingrese un string en el input\n      function (username) {\n        return !!username || \"Completa este campo\";\n      }, // Nombre de usuario menor a 15 caracteres\n      function (username) {\n        return username.length < 15 || \"El usuario debe tener menos de 15 caracteres\";\n      }],\n      emailRules: [function (email) {\n        return !!email || \"Completa este campo\";\n      }, function (email) {\n        return /.@+./.test(email) || \"Ingresa un correo válido\";\n      }],\n      passwordRules: [function (password) {\n        return !!password || \"Completa este campo\";\n      }, function (password) {\n        return password.length > 5 || \"La contraseña debe tener más de 5 caracteres\";\n      }, function (confirmation) {\n        return confirmation === _this.password || \"Las contraseñas deben ser iguales\";\n      }]\n    };\n  },\n  computed: _objectSpread({}, mapGetters([\"loading\", \"error\", \"user\"])),\n  watch: {\n    user: function user(value) {\n      // Si el value de user cambia, redirecciona al home page\n      if (value) {\n        this.$router.push(\"/\");\n      }\n    }\n  },\n  methods: {\n    handleSignupUser: function handleSignupUser() {\n      // Si no se validan los campos del formulario, no se realiza la petición de la mutación signupUser\n      if (this.$refs.form.validate()) {\n        this.$store.dispatch(\"signupUser\", {\n          username: this.username,\n          email: this.email,\n          password: this.password\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["Signup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA,SAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,QAAA,QADA;AAEA,MAFA,kBAEA;AAAA;;AACA,WAAA;AACA,mBAAA,IADA;AAEA,gBAAA,EAFA;AAGA,aAAA,EAHA;AAIA,gBAAA,EAJA;AAKA,4BAAA,EALA;AAMA;AACA,qBAAA,CACA;AACA;AAAA,eAAA,CAAA,CAAA,QAAA,IAAA,qBAAA;AAAA,OAFA,EAGA;AACA;AAAA,eACA,SAAA,MAAA,GAAA,EAAA,IAAA,8CADA;AAAA,OAJA,CAPA;AAcA,kBAAA,CACA;AAAA,eAAA,CAAA,CAAA,KAAA,IAAA,qBAAA;AAAA,OADA,EAEA;AAAA,eAAA,OAAA,IAAA,CAAA,KAAA,KAAA,0BAAA;AAAA,OAFA,CAdA;AAkBA,qBAAA,CACA;AAAA,eAAA,CAAA,CAAA,QAAA,IAAA,qBAAA;AAAA,OADA,EAEA;AAAA,eACA,SAAA,MAAA,GAAA,CAAA,IAAA,8CADA;AAAA,OAFA,EAIA;AAAA,eACA,iBAAA,MAAA,QAAA,IAAA,mCADA;AAAA,OAJA;AAlBA,KAAA;AA0BA,GA7BA;AA8BA,8BACA,WAAA,CAAA,SAAA,EAAA,OAAA,EAAA,MAAA,CAAA,CADA,CA9BA;AAiCA,SAAA;AACA,QADA,gBACA,KADA,EACA;AACA;AACA,UAAA,KAAA,EAAA;AACA,aAAA,OAAA,CAAA,IAAA,CAAA,GAAA;AACA;AACA;AANA,GAjCA;AAyCA,WAAA;AACA,oBADA,8BACA;AACA;AACA,UAAA,KAAA,KAAA,CAAA,IAAA,CAAA,QAAA,EAAA,EAAA;AACA,aAAA,MAAA,CAAA,QAAA,CAAA,YAAA,EAAA;AACA,oBAAA,KAAA,QADA;AAEA,iBAAA,KAAA,KAFA;AAGA,oBAAA,KAAA;AAHA,SAAA;AAKA;AACA;AAVA;AAzCA,CAAA","sourcesContent":["<template>\n  <v-container fluid text-md-center>\n    <!-- alerta de error -->\n    <v-layout row wrap v-if=\"error\">\n      <v-flex xs12 sm8 offset-sm2>\n        <form-alert :message=\"error.message\"></form-alert>\n      </v-flex>\n    </v-layout>\n\n    <!-- formulario -->\n    <v-layout row wrpa mt-3>\n      <v-flex xs12 sm8 offset-sm2>\n        <v-card color=\"accent\" dark>\n          <v-container>\n            <v-form v-model=\"isValidForm\" lazy-validation ref=\"form\" @submit.prevent=\"handleSignupUser\">\n\n              <v-layout row mt-3>\n                <v-flex xs12>\n                  <v-text-field :rules=\"usernameRules\" prepend-icon=\"person_pin\" label=\"Usuario\" type=\"text\" v-model=\"username\"></v-text-field>\n                </v-flex>\n              </v-layout>\n\n              <v-layout row mt-3>\n                <v-flex xs12>\n                  <v-text-field :rules=\"emailRules\" prepend-icon=\"mail\" label=\"Correo\" type=\"email\" v-model=\"email\"></v-text-field>\n                </v-flex>\n              </v-layout>\n\n              <v-layout row mt-3>\n                <v-flex xs12>\n                  <v-text-field :rules=\"passwordRules\" prepend-icon=\"vpn_key\" label=\"Contraseña\" type=\"password\" v-model=\"password\"></v-text-field>\n                </v-flex>\n              </v-layout>\n\n              <v-layout row mt-3>\n                <v-flex xs12>\n                  <v-text-field :rules=\"passwordRules\" prepend-icon=\"vpn_key\" label=\"Confirmar contraseña\" type=\"password\" v-model=\"passwordConfirmation\"></v-text-field>\n                </v-flex>\n              </v-layout>\n\n              <v-layout row mt-3>\n                <v-flex xs12>\n                  <v-btn :loading=\"loading\" :disabled=\"!isValidForm || loading\" color=\"primary\" type=\"submit\">\n                    <span slot=\"loader\" class=\"custom-loader\">\n                      <v-icon light>loop</v-icon>\n                    </span>\n                    Regístrate\n                  </v-btn>\n                  <p class=\"mt-2\">¿Ya tienes una cuenta?\n                    <router-link to=\"/signin\">Iniciar sesión</router-link>\n                  </p>\n                </v-flex>\n              </v-layout>\n\n            </v-form>\n          </v-container>\n        </v-card>\n      </v-flex>\n    </v-layout>\n  </v-container>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\";\n\nexport default {\n  name: \"Signup\",\n  data() {\n    return {\n      isValidForm: true,\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      passwordConfirmation: \"\",\n      // Validación de campos de formulario\n      usernameRules: [\n        // comprobar que se ingrese un string en el input\n        username => !!username || \"Completa este campo\",\n        // Nombre de usuario menor a 15 caracteres\n        username =>\n          username.length < 15 || \"El usuario debe tener menos de 15 caracteres\"\n      ],\n      emailRules: [\n        email => !!email || \"Completa este campo\",\n        email => /.@+./.test(email) || \"Ingresa un correo válido\"\n      ],\n      passwordRules: [\n        password => !!password || \"Completa este campo\",\n        password =>\n          password.length > 5 || \"La contraseña debe tener más de 5 caracteres\",\n        confirmation =>\n          confirmation === this.password || \"Las contraseñas deben ser iguales\"\n      ]\n    };\n  },\n  computed: {\n    ...mapGetters([\"loading\", \"error\", \"user\"])\n  },\n  watch: {\n    user(value) {\n      // Si el value de user cambia, redirecciona al home page\n      if (value) {\n        this.$router.push(\"/\");\n      }\n    }\n  },\n  methods: {\n    handleSignupUser() {\n      // Si no se validan los campos del formulario, no se realiza la petición de la mutación signupUser\n      if (this.$refs.form.validate()) {\n        this.$store.dispatch(\"signupUser\", {\n          username: this.username,\n          email: this.email,\n          password: this.password\n        });\n      }\n    }\n  }\n};\n</script>"],"sourceRoot":"src/components/Auth"}]}